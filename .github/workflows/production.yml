name: production

on:
  push:
    branches: [ "master" ]

jobs:
  docker-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
      pull-requests: write
      issues: write
      repository-projects: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get tag
        id: step_get_tag
        run: |
          echo TAG_PROJECT=$(git log -1 --decorate=short --pretty=format:'%s' | grep 'elease/[0-9]\{1,3\}.[0-9]\{1,3\}.[0-9]\{1,3\}' -oh | awk -F/ '{print $2}') >> $GITHUB_ENV

      - name: Check TAG
        id: step_check_tag
        run: |
          echo "${{ env.TAG_PROJECT }}"
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into registry Dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/clean-node-types:${{ env.TAG_PROJECT }}
          file: ./.docker/Dockerfile.prod

      - name: Create and push tag
        uses: rickstaa/action-create-tag@v1
        id: step_create_and_build_tag
        with:
          tag: ${{ env.TAG_PROJECT }}
          message: "Latest release"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_exists_error: false
          
  application-deploy:
    needs: docker-deploy
    runs-on: ubuntu-latest
    if: ${{ env.TAG_EXISTS }} == false
    steps:
      - name: Deploy on render
        run: |
          curl ${{ secrets.WEBHOOK_RENDER }}

  coveralls:
    needs: application-deploy
    runs-on: ubuntu-latest
    if: ${{ env.TAG_EXISTS }}" == false
    steps:
      - uses: actions/checkout@v2.1.0
      - name: Set up Node.js ⚙️
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'
          cache: 'yarn'
      - run: yarn install
      - run: yarn test:ci

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
  